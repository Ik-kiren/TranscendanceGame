import {
  __commonJS,
  __esm,
  __export,
  __require
} from "./chunk-EABY2BFN.js";

// node_modules/npm/package.json
var require_package = __commonJS({
  "node_modules/npm/package.json"(exports, module) {
    module.exports = {
      version: "10.7.0",
      name: "npm",
      description: "a package manager for JavaScript",
      workspaces: [
        "docs",
        "smoke-tests",
        "mock-globals",
        "mock-registry",
        "workspaces/*"
      ],
      files: [
        "bin/",
        "lib/",
        "index.js",
        "docs/content/",
        "docs/output/",
        "man/"
      ],
      keywords: [
        "install",
        "modules",
        "package manager",
        "package.json"
      ],
      homepage: "https://docs.npmjs.com/",
      author: "GitHub Inc.",
      repository: {
        type: "git",
        url: "git+https://github.com/npm/cli.git"
      },
      bugs: {
        url: "https://github.com/npm/cli/issues"
      },
      directories: {
        doc: "./doc",
        man: "./man"
      },
      main: "./index.js",
      bin: {
        npm: "bin/npm-cli.js",
        npx: "bin/npx-cli.js"
      },
      exports: {
        ".": [
          {
            default: "./index.js"
          },
          "./index.js"
        ],
        "./package.json": "./package.json"
      },
      dependencies: {
        "@isaacs/string-locale-compare": "^1.1.0",
        "@npmcli/arborist": "^7.2.1",
        "@npmcli/config": "^8.0.2",
        "@npmcli/fs": "^3.1.0",
        "@npmcli/map-workspaces": "^3.0.6",
        "@npmcli/package-json": "^5.1.0",
        "@npmcli/promise-spawn": "^7.0.1",
        "@npmcli/redact": "^2.0.0",
        "@npmcli/run-script": "^8.1.0",
        "@sigstore/tuf": "^2.3.2",
        abbrev: "^2.0.0",
        archy: "~1.0.0",
        cacache: "^18.0.2",
        chalk: "^5.3.0",
        "ci-info": "^4.0.0",
        "cli-columns": "^4.0.0",
        "fastest-levenshtein": "^1.0.16",
        "fs-minipass": "^3.0.3",
        glob: "^10.3.12",
        "graceful-fs": "^4.2.11",
        "hosted-git-info": "^7.0.1",
        ini: "^4.1.2",
        "init-package-json": "^6.0.2",
        "is-cidr": "^5.0.5",
        "json-parse-even-better-errors": "^3.0.1",
        libnpmaccess: "^8.0.1",
        libnpmdiff: "^6.0.3",
        libnpmexec: "^8.0.0",
        libnpmfund: "^5.0.1",
        libnpmhook: "^10.0.0",
        libnpmorg: "^6.0.1",
        libnpmpack: "^7.0.0",
        libnpmpublish: "^9.0.2",
        libnpmsearch: "^7.0.0",
        libnpmteam: "^6.0.0",
        libnpmversion: "^6.0.0",
        "make-fetch-happen": "^13.0.1",
        minimatch: "^9.0.4",
        minipass: "^7.0.4",
        "minipass-pipeline": "^1.2.4",
        ms: "^2.1.2",
        "node-gyp": "^10.1.0",
        nopt: "^7.2.0",
        "normalize-package-data": "^6.0.0",
        "npm-audit-report": "^5.0.0",
        "npm-install-checks": "^6.3.0",
        "npm-package-arg": "^11.0.2",
        "npm-pick-manifest": "^9.0.0",
        "npm-profile": "^9.0.2",
        "npm-registry-fetch": "^17.0.0",
        "npm-user-validate": "^2.0.0",
        "p-map": "^4.0.0",
        pacote: "^18.0.3",
        "parse-conflict-json": "^3.0.1",
        "proc-log": "^4.2.0",
        "qrcode-terminal": "^0.12.0",
        read: "^3.0.1",
        semver: "^7.6.0",
        "spdx-expression-parse": "^4.0.0",
        ssri: "^10.0.5",
        "supports-color": "^9.4.0",
        tar: "^6.2.1",
        "text-table": "~0.2.0",
        "tiny-relative-date": "^1.3.0",
        treeverse: "^3.0.0",
        "validate-npm-package-name": "^5.0.0",
        which: "^4.0.0",
        "write-file-atomic": "^5.0.1"
      },
      bundleDependencies: [
        "@isaacs/string-locale-compare",
        "@npmcli/arborist",
        "@npmcli/config",
        "@npmcli/fs",
        "@npmcli/map-workspaces",
        "@npmcli/package-json",
        "@npmcli/promise-spawn",
        "@npmcli/redact",
        "@npmcli/run-script",
        "@sigstore/tuf",
        "abbrev",
        "archy",
        "cacache",
        "chalk",
        "ci-info",
        "cli-columns",
        "fastest-levenshtein",
        "fs-minipass",
        "glob",
        "graceful-fs",
        "hosted-git-info",
        "ini",
        "init-package-json",
        "is-cidr",
        "json-parse-even-better-errors",
        "libnpmaccess",
        "libnpmdiff",
        "libnpmexec",
        "libnpmfund",
        "libnpmhook",
        "libnpmorg",
        "libnpmpack",
        "libnpmpublish",
        "libnpmsearch",
        "libnpmteam",
        "libnpmversion",
        "make-fetch-happen",
        "minimatch",
        "minipass",
        "minipass-pipeline",
        "ms",
        "node-gyp",
        "nopt",
        "normalize-package-data",
        "npm-audit-report",
        "npm-install-checks",
        "npm-package-arg",
        "npm-pick-manifest",
        "npm-profile",
        "npm-registry-fetch",
        "npm-user-validate",
        "p-map",
        "pacote",
        "parse-conflict-json",
        "proc-log",
        "qrcode-terminal",
        "read",
        "semver",
        "spdx-expression-parse",
        "ssri",
        "supports-color",
        "tar",
        "text-table",
        "tiny-relative-date",
        "treeverse",
        "validate-npm-package-name",
        "which",
        "write-file-atomic"
      ],
      devDependencies: {
        "@npmcli/docs": "^1.0.0",
        "@npmcli/eslint-config": "^4.0.2",
        "@npmcli/git": "^5.0.6",
        "@npmcli/mock-globals": "^1.0.0",
        "@npmcli/mock-registry": "^1.0.0",
        "@npmcli/template-oss": "4.21.3",
        "@tufjs/repo-mock": "^2.0.0",
        ajv: "^8.12.0",
        "ajv-formats": "^2.1.1",
        "ajv-formats-draft2019": "^1.6.1",
        "cli-table3": "^0.6.4",
        diff: "^5.2.0",
        nock: "^13.4.0",
        "npm-packlist": "^8.0.2",
        remark: "^14.0.2",
        "remark-gfm": "^3.0.1",
        "remark-github": "^11.2.4",
        rimraf: "^5.0.5",
        spawk: "^1.7.1",
        tap: "^16.3.9"
      },
      scripts: {
        dependencies: "node scripts/bundle-and-gitignore-deps.js && node scripts/dependency-graph.js",
        dumpconf: "env | grep npm | sort | uniq",
        licenses: "npx licensee --production --errors-only",
        test: "tap",
        "test:nocolor": "CI=true tap -Rclassic",
        "test-all": "node . run test -ws -iwr --if-present",
        snap: "tap",
        prepack: "node . run build -w docs",
        posttest: "node . run lint",
        lint: 'eslint "**/*.{js,cjs,ts,mjs,jsx,tsx}"',
        lintfix: "node . run lint -- --fix",
        "lint-all": "node . run lint -ws -iwr --if-present",
        resetdeps: "node scripts/resetdeps.js",
        "rp-pull-request": "node scripts/update-authors.js",
        postlint: "template-oss-check",
        "template-oss-apply": "template-oss-apply --force"
      },
      tap: {
        "test-env": [
          "LC_ALL=sk"
        ],
        timeout: 600,
        "nyc-arg": [
          "--exclude",
          "docs/**",
          "--exclude",
          "smoke-tests/**",
          "--exclude",
          "mock-globals/**",
          "--exclude",
          "mock-registry/**",
          "--exclude",
          "workspaces/**",
          "--exclude",
          "tap-snapshots/**"
        ],
        "test-ignore": "^(docs|smoke-tests|mock-globals|mock-registry|workspaces)/"
      },
      templateOSS: {
        "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
        version: "4.21.3",
        content: "./scripts/template-oss/root.js"
      },
      license: "Artistic-2.0",
      engines: {
        node: "^18.17.0 || >=20.5.0"
      }
    };
  }
});

// node_modules/npm/lib/cli/validate-engines.js
var require_validate_engines = __commonJS({
  "node_modules/npm/lib/cli/validate-engines.js"(exports, module) {
    var { engines: { node: engines }, version } = require_package();
    var npm = `v${version}`;
    module.exports = (process2, getCli) => {
      const node = process2.version;
      const unsupportedMessage = `npm ${npm} does not support Node.js ${node}. This version of npm supports the following node versions: \`${engines}\`. You can find the latest version at https://nodejs.org/.`;
      const brokenMessage = `ERROR: npm ${npm} is known not to run on Node.js ${node}.  This version of npm supports the following node versions: \`${engines}\`. You can find the latest version at https://nodejs.org/.`;
      const syntaxErrorHandler = (err) => {
        if (err instanceof SyntaxError) {
          console.error(`${brokenMessage}

ERROR:`);
          console.error(err);
          return process2.exit(1);
        }
        throw err;
      };
      process2.on("uncaughtException", syntaxErrorHandler);
      process2.on("unhandledRejection", syntaxErrorHandler);
      const cli = getCli();
      return cli(process2, {
        node,
        npm,
        engines,
        unsupportedMessage,
        off: () => {
          process2.off("uncaughtException", syntaxErrorHandler);
          process2.off("unhandledRejection", syntaxErrorHandler);
        }
      });
    };
  }
});

// browser-external:node:path
var node_path_exports = {};
__export(node_path_exports, {
  default: () => node_path_default
});
var node_path_default;
var init_node_path = __esm({
  "browser-external:node:path"() {
    node_path_default = new Proxy({}, {
      get() {
        throw new Error('Module "node:path" has been externalized for browser compatibility and cannot be accessed in client code.');
      }
    });
  }
});

// node_modules/npm/lib/cli.js
var require_cli = __commonJS({
  "node_modules/npm/lib/cli.js"(exports, module) {
    var validateEngines = require_validate_engines();
    var cliEntry = (init_node_path(), node_path_exports).resolve(__dirname, "cli/entry.js");
    module.exports = (process2) => validateEngines(process2, () => __require(cliEntry));
  }
});

// node_modules/npm/index.js
var require_npm = __commonJS({
  "node_modules/npm/index.js"(exports, module) {
    if (__require.main === module) {
      require_cli()(process);
    } else {
      throw new Error("The programmatic API was removed in npm v8.0.0");
    }
  }
});

// dep:npm
var npm_default = require_npm();
export {
  npm_default as default
};
//# sourceMappingURL=npm.js.map
